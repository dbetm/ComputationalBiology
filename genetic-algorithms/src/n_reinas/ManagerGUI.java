package n_reinas;

import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author david
 */
public class ManagerGUI extends javax.swing.JFrame {
    private Manager manager;
    private ArrayList<Integer> indexSeleccionados;
    /* Create model */        
    DefaultListModel<String> dlmAlgos = new DefaultListModel<>();
    
    public ManagerGUI() {
        initComponents();
        // Configurar lista y modos de selección
        this.listAlgosGeneticos.setModel(dlmAlgos);
        this.cbxSeleccion.removeAllItems();
        this.cbxSeleccion.addItem("Torneo");
        this.cbxSeleccion.addItem("Aleatorio");
        // Deshabilitar algunos componentes
        this.listAlgosGeneticos.setEnabled(false);
        this.btnAgregar.setEnabled(false);
        this.btnIniciar.setEnabled(false);
        this.btnDetener.setEnabled(false);
        this.btnIntercambiar.setEnabled(false);
        this.cbxSeleccion.setEnabled(false);
        this.txtNumGeneraciones.setEnabled(false);
        this.txtPorcentajeMuestra.setEnabled(false);
        this.txtProbMuta.setEnabled(false);
        this.txtTamPoblacion.setEnabled(false);
        // Instanciar el arreglo de seleccionados
        this.indexSeleccionados = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAlgosGeneticos = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        txtTamFenotipo = new javax.swing.JTextField();
        btnInit = new javax.swing.JButton();
        btnDetener = new javax.swing.JButton();
        btnIniciar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtNumGeneraciones = new javax.swing.JTextField();
        txtTamPoblacion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtProbMuta = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPorcentajeMuestra = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbxSeleccion = new javax.swing.JComboBox<>();
        btnAgregar = new javax.swing.JButton();
        Cerrar = new javax.swing.JButton();
        btnIntercambiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Algoritmos actuales:");

        listAlgosGeneticos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listAlgosGeneticos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listAlgosGeneticosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listAlgosGeneticos);

        jLabel2.setText("Tamaño genotipo:");

        btnInit.setText("Let's go!");
        btnInit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInitActionPerformed(evt);
            }
        });

        btnDetener.setText("Detener");
        btnDetener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetenerActionPerformed(evt);
            }
        });

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        jLabel3.setText("Número generaciones:");

        jLabel4.setText("Tamaño población:");

        jLabel5.setText("Probabilidad muta:");

        jLabel6.setText("% Muestra:");

        jLabel7.setText("Modo de selección:");

        cbxSeleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        Cerrar.setText("Cerrar");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });

        btnIntercambiar.setText("Intercambiar");
        btnIntercambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIntercambiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel1)
                    .addComponent(Cerrar, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTamFenotipo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInit, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnDetener, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnIniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumGeneraciones))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(btnIntercambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxSeleccion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPorcentajeMuestra)
                            .addComponent(txtTamPoblacion)
                            .addComponent(txtProbMuta)
                            .addComponent(btnAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtTamFenotipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInit))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDetener)
                        .addGap(18, 18, 18)
                        .addComponent(btnIniciar)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNumGeneraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTamPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtProbMuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtPorcentajeMuestra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cbxSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(Cerrar)
                    .addComponent(btnIntercambiar))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInitActionPerformed
        int n = Integer.parseInt(this.txtTamFenotipo.getText());
        // Instanciar el manager
        this.manager = new Manager(n);
        // Deshabilitar botón de iniciar y campo de texto del fenotipo
        this.btnInit.setEnabled(false);
        this.txtTamFenotipo.setEnabled(false);
        // Habilitar los demás componentes
        this.listAlgosGeneticos.setEnabled(true);
        this.btnAgregar.setEnabled(true);
        this.btnIniciar.setEnabled(true);
        this.btnDetener.setEnabled(true);
        this.cbxSeleccion.setEnabled(true);
        this.txtNumGeneraciones.setEnabled(true);
        this.txtPorcentajeMuestra.setEnabled(true);
        this.txtProbMuta.setEnabled(true);
        this.txtTamPoblacion.setEnabled(true); 
    }//GEN-LAST:event_btnInitActionPerformed

    // ## AGREGAR NUEVO GENÉTICO
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        int numGeneraciones = Integer.parseInt(this.txtNumGeneraciones.getText());
        int tamPoblacion = Integer.parseInt(this.txtTamPoblacion.getText());
        double probMuta = Double.parseDouble(this.txtProbMuta.getText());
        double porcentajeMuestra = Double.parseDouble(this.txtPorcentajeMuestra.getText());
        String modoSeleccion = (String) this.cbxSeleccion.getSelectedItem();
        Seleccion.TipoSeleccion ts[];
        if(modoSeleccion.equals("Aleatorio")) {
            ts = new Seleccion.TipoSeleccion[] {
                Seleccion.TipoSeleccion.RANDOM,
                Seleccion.TipoSeleccion.TORNEO
            };
        }
        else {
            ts = new Seleccion.TipoSeleccion[] {
                Seleccion.TipoSeleccion.TORNEO,
                Seleccion.TipoSeleccion.RANDOM
            }; 
        }
        // Construimos la configuración
        Configuracion conf = new Configuracion(numGeneraciones, tamPoblacion, 
            probMuta, porcentajeMuestra, this.manager.getTamFenotipo(), ts);
        // Agregamos el genético con la conf anterior
        int hashCode = this.manager.agregarGenetico(conf);
        // Y ahora lo agregamos a la lista con su correspondiente hashCode
        this.dlmAlgos.addElement(String.valueOf(hashCode) + "/creado");
        // Limpiamos los campos de texto
        this.txtNumGeneraciones.setText("");
        this.txtTamPoblacion.setText("");
        this.txtProbMuta.setText("");
        this.txtPorcentajeMuestra.setText("");
    }//GEN-LAST:event_btnAgregarActionPerformed

    // Inicia el algoritmo seleccionado
    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        if(!this.listAlgosGeneticos.isSelectionEmpty() && 
            this.listAlgosGeneticos.getSelectedValuesList().size() == 1) {
            String algoritmo[] = this.listAlgosGeneticos.getSelectedValue().split("/");
            int index = this.listAlgosGeneticos.getSelectedIndex();
            // Actualizamos su estado
            this.dlmAlgos.set(index, algoritmo[0]+"/iniciado");
            int hashCode = Integer.parseInt(algoritmo[0]);
            // Lo iniciamos
            this.manager.ejecutarGenetico(hashCode);
            GeneticoGUI genGUI = new GeneticoGUI(this.manager.getGenetico(hashCode), this);
            // Deseleccionamos
            this.listAlgosGeneticos.clearSelection();
            this.indexSeleccionados.clear();
        }
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_CerrarActionPerformed

    private void btnIntercambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIntercambiarActionPerformed
        // Recuperamos la lista de los 2 algoritmos seleccionados
        List<String> algos = this.listAlgosGeneticos.getSelectedValuesList();
        /* Ahora, usando el vector de índices, recuperamos el algoritmo origen 
        y el destino, que es al que se le realiza el intercambio */
        int i1 = this.indexSeleccionados.get(0);
        int i2 = this.indexSeleccionados.get(1);
        if(i1 > i2) {
            i1 = 0;
            i2 = 1;
        }
        else {
            i1 = 1;
            i2 = 0;
        }
        
        String strOrigen = algos.get(i1).split("/")[0];
        String strDestino = algos.get(i2).split("/")[0];
        
        int hashOrigen = Integer.parseInt(strOrigen);
        int hashDestino = Integer.parseInt(strDestino);
        //System.out.println("hashOrigen: " + hashOrigen);
        //System.out.println("hashDestino: " + hashDestino);
        
        // Se efectua el intercambio
        //this.manager.intercambiarMejorIndividuo(hashOrigen, hashDestino);
        Intercambio inter = new Intercambio(this, true, strOrigen, strDestino, manager);
        inter.setVisible(true);
        
        this.indexSeleccionados.clear();
        this.listAlgosGeneticos.clearSelection();
        this.btnIntercambiar.setEnabled(false);
    }//GEN-LAST:event_btnIntercambiarActionPerformed

    private void listAlgosGeneticosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listAlgosGeneticosValueChanged
        List<String> algos = this.listAlgosGeneticos.getSelectedValuesList();
        // se agrega el origen
        if(algos.size() == 1) {
            this.btnIntercambiar.setEnabled(false);
            this.indexSeleccionados.clear();
            this.indexSeleccionados.add(this.listAlgosGeneticos.getSelectedIndex());
        }
        // Cuando ha seleccionado solo 2, origen y destino
        else if(algos.size() == 2) {
            int i1 = this.listAlgosGeneticos.getSelectedIndices()[0];
            int i2 = this.listAlgosGeneticos.getSelectedIndices()[1];
            if(this.indexSeleccionados.contains(i1)) this.indexSeleccionados.add(i2);
            else this.indexSeleccionados.add(i1);
            this.btnIntercambiar.setEnabled(true);
        }
        else {
            this.indexSeleccionados.clear();
            this.listAlgosGeneticos.clearSelection();
            this.btnIntercambiar.setEnabled(false);
        }
    }//GEN-LAST:event_listAlgosGeneticosValueChanged

    private void btnDetenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetenerActionPerformed
        if(!this.listAlgosGeneticos.isSelectionEmpty() && 
            this.listAlgosGeneticos.getSelectedValuesList().size() == 1) {
            String algoritmo[] = this.listAlgosGeneticos.getSelectedValue().split("/");
            int index = this.listAlgosGeneticos.getSelectedIndex();
            // Actualizamos su estado
            this.dlmAlgos.set(index, algoritmo[0]+"/detenido");
            int hashCode = Integer.parseInt(algoritmo[0]);
            // Lo detenemos
            if(!this.manager.getGenetico(hashCode).getHilo().isInterrupted())
                this.manager.getGenetico(hashCode).getHilo().stop();
            // Deseleccionamos
            this.listAlgosGeneticos.clearSelection();
            this.indexSeleccionados.clear();
        }
    }//GEN-LAST:event_btnDetenerActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cerrar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnDetener;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnInit;
    private javax.swing.JButton btnIntercambiar;
    private javax.swing.JComboBox<String> cbxSeleccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listAlgosGeneticos;
    private javax.swing.JTextField txtNumGeneraciones;
    private javax.swing.JTextField txtPorcentajeMuestra;
    private javax.swing.JTextField txtProbMuta;
    private javax.swing.JTextField txtTamFenotipo;
    private javax.swing.JTextField txtTamPoblacion;
    // End of variables declaration//GEN-END:variables
}
