package sat_3;

import java.util.Arrays;
import javax.swing.DefaultListModel;


/**
 *
 * @author david
 */
public class GeneticoGUI extends javax.swing.JFrame {
    private ThreeSAT genetico;
    private DefaultListModel<String> log = new DefaultListModel<>();
    private GUI mg;
    /**
     * Creates new form GeneticoGUI
     */
    public GeneticoGUI() {
        initComponents();
    }
    
    public GeneticoGUI(ThreeSAT gen, GUI mgGUI) {
        initComponents();
        this.genetico = gen;
        this.mg = mgGUI;
        Configuracion conf = this.genetico.getConf();
        // Seteamos los valores
        this.txtNumGeneraciones.setText(String.valueOf(conf.getNumGeneraciones()));
        this.txtTamPob.setText(String.valueOf(conf.getTamPoblacion()));
        this.sliderProbMuta.setValue((int) (conf.getProbMuta()*100));
        // La máscara
        String mask = Arrays.toString(conf.getMascara());
        if(mask.length() > 25) {
            mask = mask.substring(0, 25) + "...";
        }
        this.lblMascara.setText(mask);
        // Modo de selección
        this.cmbxModoSeleccion.removeAllItems();
        Seleccion.TipoSeleccion tipoSelecion[] = conf.getTipoSeleccion();
        if(tipoSelecion[0] == Seleccion.TipoSeleccion.TORNEO) {
            this.cmbxModoSeleccion.addItem("Torneo");
            this.cmbxModoSeleccion.setSelectedItem("Torneo");
            this.cmbxModoSeleccion.addItem("Aleatorio");
        }
        else {
            this.cmbxModoSeleccion.addItem("Aleatorio");
            this.cmbxModoSeleccion.setSelectedItem("Aleatorio");
            this.cmbxModoSeleccion.addItem("Torneo");
        }
        
        // Configurar el log
        this.listaLog.setModel(this.log);
        // Setear las listas y modelo del log al genético 
        this.genetico.setListLog(this.listaLog);
        this.genetico.setLog(this.log);
        System.out.println(this.genetico.hashCode());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaLog = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        txtNumGeneraciones = new javax.swing.JTextField();
        txtTamPob = new javax.swing.JTextField();
        sliderProbMuta = new javax.swing.JSlider();
        cmbxModoSeleccion = new javax.swing.JComboBox<>();
        lblMascara = new javax.swing.JLabel();
        btnActualizarNumGeneraciones = new javax.swing.JButton();
        btnActualizarTamPoblacion = new javax.swing.JButton();
        btnActualizarMascara = new javax.swing.JButton();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("# Generaciones:");

        jLabel3.setText("Tamaño población:");

        jLabel4.setText("Probabilidad de muta:");

        jLabel5.setText("Modo de selección:");

        jLabel6.setText("Máscara:");

        listaLog.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaLog);

        jLabel7.setText("Log");

        sliderProbMuta.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderProbMutaStateChanged(evt);
            }
        });

        cmbxModoSeleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbxModoSeleccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbxModoSeleccionItemStateChanged(evt);
            }
        });

        lblMascara.setText("[mask]");

        btnActualizarNumGeneraciones.setText("Actualizar");
        btnActualizarNumGeneraciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarNumGeneracionesActionPerformed(evt);
            }
        });

        btnActualizarTamPoblacion.setText("Actualizar");
        btnActualizarTamPoblacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarTamPoblacionActionPerformed(evt);
            }
        });

        btnActualizarMascara.setText("Actualizar");
        btnActualizarMascara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarMascaraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNumGeneraciones, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(txtTamPob))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnActualizarNumGeneraciones, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                                    .addComponent(btnActualizarTamPoblacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel5))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(lblMascara)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnActualizarMascara, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cmbxModoSeleccion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sliderProbMuta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(94, 94, 94))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(txtNumGeneraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizarNumGeneraciones))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTamPob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnActualizarTamPoblacion))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sliderProbMuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbxModoSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(lblMascara)
                            .addComponent(btnActualizarMascara)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1)))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // ## Actualizar el número de generaciones
    private void btnActualizarNumGeneracionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarNumGeneracionesActionPerformed
        int nuevoNumGeneraciones = Integer.parseInt(this.txtNumGeneraciones.getText());
        this.genetico.getConf().setNumGeneraciones(nuevoNumGeneraciones);
    }//GEN-LAST:event_btnActualizarNumGeneracionesActionPerformed

    // ## Actualizar el tamaño de la población
    private void btnActualizarTamPoblacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarTamPoblacionActionPerformed
        int nuevoTamPob = Integer.parseInt(this.txtTamPob.getText());
        this.genetico.getConf().setTamPoblacion(nuevoTamPob);
    }//GEN-LAST:event_btnActualizarTamPoblacionActionPerformed

    // ## Actualizar la máscara
    private void btnActualizarMascaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarMascaraActionPerformed
        this.genetico.getConf().setMascara(Reproduccion.generarMascara(100));
        String mask = Arrays.toString(this.genetico.getConf().getMascara());
        if(mask.length() > 25) {
            mask = mask.substring(0, 25) + "...";
        }
        this.lblMascara.setText(mask);
    }//GEN-LAST:event_btnActualizarMascaraActionPerformed

    // ## Actualiza la probabilidad de muta
    private void sliderProbMutaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderProbMutaStateChanged
        double probMuta = this.sliderProbMuta.getValue() / 100;
        this.genetico.getConf().setProbMuta(probMuta);
    }//GEN-LAST:event_sliderProbMutaStateChanged

    // ## Actualizar el modo de selección
    private void cmbxModoSeleccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbxModoSeleccionItemStateChanged
        if(this.cmbxModoSeleccion.getSelectedItem() != null) {
            String modoSeleccion = (String) this.cmbxModoSeleccion.getSelectedItem();
            Seleccion.TipoSeleccion ts[];
            if(modoSeleccion.equals("Aleatorio")) {
                ts = new Seleccion.TipoSeleccion[] {
                    Seleccion.TipoSeleccion.RANDOM,
                    Seleccion.TipoSeleccion.TORNEO
                };
            }
            else {
                ts = new Seleccion.TipoSeleccion[] {
                    Seleccion.TipoSeleccion.TORNEO,
                    Seleccion.TipoSeleccion.RANDOM
                }; 
            }
            this.genetico.getConf().setTipoSeleccion(ts);
        }
    }//GEN-LAST:event_cmbxModoSeleccionItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneticoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneticoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneticoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneticoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneticoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarMascara;
    private javax.swing.JButton btnActualizarNumGeneraciones;
    private javax.swing.JButton btnActualizarTamPoblacion;
    private javax.swing.JComboBox<String> cmbxModoSeleccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMascara;
    private javax.swing.JList<String> listaLog;
    private javax.swing.JSlider sliderProbMuta;
    private javax.swing.JTextField txtNumGeneraciones;
    private javax.swing.JTextField txtTamPob;
    // End of variables declaration//GEN-END:variables
}
