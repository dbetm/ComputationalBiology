package sat_3;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;

/**
 *
 * @author david
 */
public class GUI extends javax.swing.JFrame {
    // Atributos
    private Manager manager;
    private DefaultListModel<String> dlmAlgos = new DefaultListModel<>();
    private ArrayList<Integer> indexSeleccionados;
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        this.setTitle("3-SAT");
        // Configurar lista y modos de selecci칩n
        this.listAlgos.setModel(this.dlmAlgos);
        this.cmbxModoSeleccion.removeAllItems();
        this.cmbxModoSeleccion.addItem("Torneo");
        this.cmbxModoSeleccion.addItem("Aleatorio");
        // Deshabilitar todos los controles, excepto botones de cerrar y abrir instancias
        this.txtNumGeneraciones.setEnabled(false);
        this.txtTamPoblacion.setEnabled(false);
        //this.btnActualizarMascara.setEnabled(false);
        //this.btnDeseleccionar.setEnabled(false);
        this.btnIniciar.setEnabled(false);
        this.btnDetener.setEnabled(false);
        this.btnIntercambiar.setEnabled(false);
        //this.btnActualizar.setEnabled(false);
        this.btnAgregar.setEnabled(false);
        // Instanciar el arreglo de seleccionados
        this.indexSeleccionados = new ArrayList<>();
        // Setear el modelo al log
        //this.listLog.setModel(this.dlmLog);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAlgos = new javax.swing.JList<>();
        btnCerrar = new javax.swing.JButton();
        btnSeleccionarInstancias = new javax.swing.JButton();
        btnIniciar = new javax.swing.JButton();
        btnDetener = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtNumGeneraciones = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTamPoblacion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sliderProbMuta = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        cmbxModoSeleccion = new javax.swing.JComboBox<>();
        btnIntercambiar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Algoritmos");

        listAlgos.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listAlgosValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listAlgos);

        btnCerrar.setBackground(new java.awt.Color(255, 153, 153));
        btnCerrar.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnSeleccionarInstancias.setText("Seleccionar instancias");
        btnSeleccionarInstancias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarInstanciasActionPerformed(evt);
            }
        });

        btnIniciar.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnIniciar.setForeground(new java.awt.Color(0, 153, 51));
        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnDetener.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnDetener.setForeground(new java.awt.Color(255, 102, 0));
        btnDetener.setText("Detener");

        jLabel2.setText("# generaciones:");

        jLabel3.setText("Tama침o poblaci칩n:");

        jLabel4.setText("Probabilidad de muta:");

        jLabel5.setText("Modo de selecci칩n:");

        cmbxModoSeleccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnIntercambiar.setFont(new java.awt.Font("DejaVu Sans", 1, 12)); // NOI18N
        btnIntercambiar.setForeground(new java.awt.Color(153, 153, 0));
        btnIntercambiar.setText("Intercambiar");
        btnIntercambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIntercambiarActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(sliderProbMuta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNumGeneraciones, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTamPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnSeleccionarInstancias, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(cmbxModoSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(jLabel5)))
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(91, 91, 91))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDetener, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnIntercambiar, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnSeleccionarInstancias))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtNumGeneraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTamPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sliderProbMuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbxModoSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIniciar)
                    .addComponent(btnDetener)
                    .addComponent(btnAgregar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCerrar)
                    .addComponent(btnIntercambiar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // ## Bot칩n de cerrar
    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    // ## Bot칩n de seleccionar instancias
    private void btnSeleccionarInstanciasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarInstanciasActionPerformed
        Tokenizador.leerDatos();
        // Habilitar algunos controles
        this.txtNumGeneraciones.setEnabled(true);
        this.txtTamPoblacion.setEnabled(true);
        //this.btnDeseleccionar.setEnabled(true);
        this.btnIniciar.setEnabled(true);
        this.btnDetener.setEnabled(true);
        this.btnAgregar.setEnabled(true);
        // Deshabilitar de seleccionar instancias
        this.btnSeleccionarInstancias.setEnabled(false);
        // Instanciamos el manager
        this.manager = new Manager();
    }//GEN-LAST:event_btnSeleccionarInstanciasActionPerformed

    // ## Agregar un nuevo gen칠tico
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        int numGeneraciones = Integer.parseInt(this.txtNumGeneraciones.getText());
        int tamPoblacion = Integer.parseInt(this.txtTamPoblacion.getText());
        double probMuta = (double)this.sliderProbMuta.getValue() / 100.0;
        // Para el modo de selecci칩n
        String modoSeleccion = (String) this.cmbxModoSeleccion.getSelectedItem();
        Seleccion.TipoSeleccion ts[];
        if(modoSeleccion.equals("Aleatorio")) {
            ts = new Seleccion.TipoSeleccion[] {
                Seleccion.TipoSeleccion.RANDOM,
                Seleccion.TipoSeleccion.TORNEO
            };
        }
        else {
            ts = new Seleccion.TipoSeleccion[] {
                Seleccion.TipoSeleccion.TORNEO,
                Seleccion.TipoSeleccion.RANDOM
            }; 
        }
        // Construimos la configuraci칩n
        // args[#generaciones, #poblaci칩n, #probMuta, [#]m치scara, [custom]Selecci칩n]
        Configuracion conf = new Configuracion(numGeneraciones, tamPoblacion, probMuta, 
            Reproduccion.generarMascara(100), ts);
        // Agregamos al manager el gen칠tico con la conf anterior
        int hashCode = this.manager.agregarGenetico(conf);
        // Y ahora lo agregamos a la lista con su correspondiente hashCode
        this.dlmAlgos.addElement(String.valueOf(hashCode) + "/creado");
        // Reseteamos los controles
        this.txtNumGeneraciones.setText("");
        this.txtTamPoblacion.setText("");
        this.sliderProbMuta.setValue(50);
    }//GEN-LAST:event_btnAgregarActionPerformed

    // ## Iniciar un algoritmo gen칠tico
    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        if(!this.listAlgos.isSelectionEmpty() && 
            this.listAlgos.getSelectedValuesList().size() == 1) {
            String algoritmo[] = this.listAlgos.getSelectedValue().split("/");
            int index = this.listAlgos.getSelectedIndex();
            // Actualizamos su estado
            this.dlmAlgos.set(index, algoritmo[0]+"/iniciado");
            int hashCode = Integer.parseInt(algoritmo[0]);
            // Lo iniciamos
            this.manager.ejecutarGenetico(hashCode);
            ThreeSAT genetico = this.manager.getGenetico(hashCode);
            // Seteamos el log (modelo y lista) en el gen칠tico seleccionado
            //genetico.setLog(this.dlmLog);
            //genetico.setListLog(this.listLog);
            GeneticoGUI genGUI = new GeneticoGUI(genetico, this);
            genGUI.setVisible(true);
            // Deseleccionamos
            this.listAlgos.clearSelection();
            this.indexSeleccionados.clear();
        }
    }//GEN-LAST:event_btnIniciarActionPerformed

    // ## Detectar cuando cambia la selecci칩n
    private void listAlgosValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listAlgosValueChanged
        List<String> algos = this.listAlgos.getSelectedValuesList();
        // se agrega el origen
        if(algos.size() == 1) {
            this.btnIntercambiar.setEnabled(false);
            this.indexSeleccionados.clear();
            //this.btnDeseleccionar.doClick(); // trigger click
            this.indexSeleccionados.add(this.listAlgos.getSelectedIndex());
        }
        // Cuando ha seleccionado solo 2, origen y destino
        else if(algos.size() == 2) {
            int i1 = this.listAlgos.getSelectedIndices()[0];
            int i2 = this.listAlgos.getSelectedIndices()[1];
            if(this.indexSeleccionados.contains(i1)) this.indexSeleccionados.add(i2);
            else this.indexSeleccionados.add(i1);
            this.btnIntercambiar.setEnabled(true);
        }
        else {
            this.indexSeleccionados.clear();
            this.listAlgos.clearSelection();
            this.btnIntercambiar.setEnabled(false);
        }
    }//GEN-LAST:event_listAlgosValueChanged

    // ## Intercambiar informaci칩n entre 2 gen칠ticos
    private void btnIntercambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIntercambiarActionPerformed
        // Recuperamos la lista de los 2 algoritmos seleccionados
        List<String> algos = this.listAlgos.getSelectedValuesList();
        /* Ahora, usando el vector de 칤ndices, recuperamos el algoritmo origen 
        y el destino, que es al que se le realiza el intercambio */
        int i1 = this.indexSeleccionados.get(0);
        int i2 = this.indexSeleccionados.get(1);
        if(i1 > i2) {
            i1 = 0;
            i2 = 1;
        }
        else {
            i1 = 1;
            i2 = 0;
        }
        
        String strOrigen = algos.get(i1).split("/")[0];
        String strDestino = algos.get(i2).split("/")[0];
        
        // mostramos la ventana del intercambio
        Intercambio inter = new Intercambio(this, true, strOrigen, strDestino, this.manager);
        inter.setVisible(true);
    }//GEN-LAST:event_btnIntercambiarActionPerformed

    private void mostrarInfoGenetico() {
        String algoritmo[] = this.listAlgos.getSelectedValue().split("/");
        int hashCode = Integer.parseInt(algoritmo[0]);
        ThreeSAT genetico = this.manager.getGenetico(hashCode);
        Configuracion conf = genetico.getConf();
        // Vamos a setear el n칰mero de generaciones
        this.txtNumGeneraciones.setText(String.valueOf(conf.getNumGeneraciones()));
        // El tama침o de la poblaci칩n
        this.txtTamPoblacion.setText(String.valueOf(conf.getTamPoblacion()));
        this.sliderProbMuta.setValue((int)(conf.getProbMuta()*100));
        // La m치scara
        String mask = Arrays.toString(conf.getMascara());
        if(mask.length() > 25) {
            mask = mask.substring(0, 25) + "...";
        }
        //this.lblMascara.setText(mask);
        //this.btnActualizarMascara.setEnabled(true);
        // Modo de selecci칩n
        this.cmbxModoSeleccion.removeAllItems();
        Seleccion.TipoSeleccion tipoSelecion[] = conf.getTipoSeleccion();
        if(tipoSelecion[0] == Seleccion.TipoSeleccion.TORNEO) {
            this.cmbxModoSeleccion.addItem("Torneo");
            this.cmbxModoSeleccion.setSelectedItem("Torneo");
            this.cmbxModoSeleccion.addItem("Aleatorio");
        }
        else {
            this.cmbxModoSeleccion.addItem("Aleatorio");
            this.cmbxModoSeleccion.setSelectedItem("Aleatorio");
            this.cmbxModoSeleccion.addItem("Torneo");
        }
        // Habilitamos el bot칩n de actualizar
        //this.btnActualizar.setEnabled(true);s
        // Deshabilitamos el de agregar
        this.btnAgregar.setEnabled(false);
        // Atualizamos el label que est치 justo arriba del log
        //this.lblHashcodeLog.setText(String.valueOf(hashCode));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnDetener;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnIntercambiar;
    private javax.swing.JButton btnSeleccionarInstancias;
    private javax.swing.JComboBox<String> cmbxModoSeleccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listAlgos;
    private javax.swing.JSlider sliderProbMuta;
    private javax.swing.JTextField txtNumGeneraciones;
    private javax.swing.JTextField txtTamPoblacion;
    // End of variables declaration//GEN-END:variables
}
